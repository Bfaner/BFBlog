'use strict';

// match markdown image and covert to asset_img 
hexo.extend.filter.register('before_post_render', function(data){

    data.content = data.content.replace(/!{1}\[([^\[\]]*)\]\((\S*)\s?(?:".*")?\)/g,
        function(match_str, label, path){

            // if only one /
            if( (path.split("/")).length == 2){
                //console.debug("Markdown Image Path: " + match_str);
                console.debug("asset_img string: " + "{% asset_img " + (path.split("/"))[1] + " " +  label + " %}" );
                return "{% asset_img " + (path.split("/"))[1] + " " +  label + " %}" 
            }else{
                console.debug("error Image Path: " + match_str);
                ///console.debug("Markdown Image Path does not exists!");
                return match_str;
            }

        });

    data.content = data.content.replace(/<img src="[^<]{1,100}style="zoom:[^<]{1,4};" \/>/g,
        function(match_str){
            //console.debug("match_str: " + match_str);

            if(data.abbrlink == undefined){
                return match_str;
            }
            // if only one /
            if( (match_str.split("/")).length == 3){
                //console.debug("Markdown Image Path: " + match_str);
                // console.debug("asset_img string: <img src=\"" + data.abbrlink + "/" + (match_str.split("/"))[1] + "/" + (match_str.split("/"))[2]);
                return "<img src=\"" + data.abbrlink + "/" + (match_str.split("/"))[1] + "/" + (match_str.split("/"))[2];
            }else{
                console.debug("error Image Path: " + match_str);
                //console.debug("match_str.split: " + match_str.split("/").length);
                //console.debug("Markdown Image Path does not exists!");
                return match_str;
            }

        });
    
    //文章链接        [radiolinkTask](通讯链路.md)  {% post_link 通讯链路 %}【中文无法识别】
    data.content = data.content.replace(/\[.{1,30}\.md\)/g,
        function(match_str){

            var tmpPath = ((match_str.split("("))[1].split("."))[0];
            var postName = ((match_str.split("["))[1].split("]"))[0];
            //console.debug("post_path : " + match_str);encodeURI
            console.debug("post_link string: " + postName + "{% asset_link " + tmpPath +" %}");

            return postName + "{% asset_link " + tmpPath +" %}";

        });

    //将公式中的\\转换位\newline，加粗符号自动删除。
    data.content = data.content.replace(/\\\\/g,
        function(match_str){

            return "\\newline";
        });
    data.content = data.content.replace(/\\boldsymbol/g,function(){
            return " ";
        });

    return data;
});